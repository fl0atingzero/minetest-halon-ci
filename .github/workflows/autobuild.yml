name: autobuild-all

on:
  workflow_dispatch:
    inputs:
      reason:
        description: Why run all?
        required: false
        type: string
  schedule:
    - cron: "0 0 */2 * *"

permissions:
  contents: write
  actions:  read

concurrency:
  group: nightly
  cancel-in-progress: false

jobs:
  android:
    uses: ./.github/workflows/android.yml
    secrets: inherit

  macos:
    uses: ./.github/workflows/macos.yml

  windows:
    uses: ./.github/workflows/windows.yml

  collect-and-release:
    needs: [android, macos, windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions:  read
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare dist
        run: mkdir -p dist

      - name: Download artifacts (android)
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ needs.android.outputs.run_id }}
          path: dist
          merge-multiple: true

      - name: Download artifacts (macOS)
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ needs.macos.outputs.run_id }}
          path: dist
          merge-multiple: true

      - name: Download artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ needs.windows.outputs.run_id }}
          path: dist
          merge-multiple: true

      - name: List collected files
        run: |
          echo "Collected files:"
          find dist -maxdepth 1 -type f -printf '%f\n' | sort

      - name: Remove old assets from 'nightly' (if any)
        run: |
          set -euo pipefail
          tag="nightly"
          if gh release view "$tag" >/dev/null 2>&1; then
            echo "Release '$tag' exists, deleting old assets..."
            ids=$(gh api "repos/${GITHUB_REPOSITORY}/releases/tags/$tag" --jq '.assets[].id' || true)
            if [[ -n "$ids" ]]; then
              while read -r id; do
                [[ -z "$id" ]] && continue
                echo "Deleting asset id=$id"
                gh api -X DELETE "repos/${GITHUB_REPOSITORY}/releases/assets/$id"
              done <<< "$ids"
            fi
          else
            echo "Release '$tag' not found; will create fresh."
          fi

      - name: Create or update 'nightly' release (mark as latest)
        run: |
          set -euo pipefail
          tag="nightly"
          title="Nightly build $(date -u +'%Y-%m-%d %H:%M UTC')"
          if gh release view "$tag" >/dev/null 2>&1; then
            gh release edit "$tag" --title "$title" --latest
          else
            gh release create "$tag" \
              --title "$title" \
              --notes "Automated nightly build" \
              --latest \
              --target "$GITHUB_SHA"
          fi

      - name: Upload fresh assets (clobber same names)
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(dist/*)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No artifacts found in dist/"; exit 1
          fi
          gh release upload nightly "${files[@]}" --clobber
          gh release edit nightly --latest
